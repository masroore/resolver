<!--
Copyright (c) 2008, Michael Foord

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions 
are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer 
      in the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Michael Foord nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-->
<document currentResultWorksheet="Surface Data" verticalSplitterRatio="0.75" horizontalSplitterRatio="0.729763387298" splitterOrientation="Horizontal" suspendRecalculations="False" license="BSD Revised" copyrightOwner="Michael Foord">
    <foldState license="True" imports="True" worksheetCreation="True" preConstantsUserCode="False" constants="True" preFormulaeUserCode="False" generated="False" postFormulaeUserCode="False"/>
    <preConstantsUserCode><![CDATA[import sys
from System.IO import Path
directory = Path.GetDirectoryName(__file__)

import os
import plot
reload(plot)
from System.Drawing import Image

# You might need to change this for Windows 2000 and Windows NT systems
fontPath = r'c:\Windows\Fonts'

# Various paths needed by the scripts
gnuplotPath = Path.Combine(directory, 'gnuplot\\wgnuplot.exe')
imageDirectory = Path.Combine(directory, 'images')
scriptPath = Path.Combine(directory, 'surface.gp')

# Generate the path to the next image so that we don't overwrite the last one
nextImageNumber = (max( [int(name[7:-4]) for name in os.listdir(imageDirectory) if not name.startswith('.')] or [0] )) + 1
imagePath = Path.Combine(imageDirectory, 'surface%s.png' % nextImageNumber)

# The template for the gnuplot script
# Experiment with this!
template = r"""
set terminal png nocrop enhanced font verdana 12 size 640,480
set title "Resolver Gnuplot Demo" 
set xlabel "X axis" 
set xlabel  offset character -2, -2, 0
set ylabel "Y axis" 
set ylabel  offset character 2, -2, 0
set zlabel "Z axis" 
set zlabel  offset character 1, 0, 0
set output '%s'
set contour both
set view 45, 30
set style data lines
set hidden3d
splot "-" title "The Data"

    %s

"""

]]></preConstantsUserCode>
    <preFormulaeUserCode><![CDATA[
]]></preFormulaeUserCode>
    <names />
    <viewStates>
        <viewState worksheet="Surface Data">
            <currentCell col="1" row="1" />
            <scrollPos col="1" row="1" />
            <virtualGridSize width="61" height="64" />
        </viewState>
        <viewState worksheet="Surface Data Plot">
            <currentCell col="1" row="1" />
            <scrollPos col="1" row="1" />
            <virtualGridSize width="100" height="100" />
        </viewState>
    </viewStates>
    <worksheet name="Surface Data" value="" showGrid="True" showBounds="False" headerWidth="-1" headerHeight="-1">
    </worksheet>
    <postFormulaeUserCode><![CDATA[
sheet = workbook['Surface Data']

# Generate the data
from math import sin
for x in range(1, 50):
    u = (6.0 / 50) * x - 3
    for y in range(1, 50):
        v = (6.0 / 50) * y - 3
        try:
            sheet[x, y] = sin(u*u + v*v) / (u*u + v*v)
        except ZeroDivisionError:
            sheet[x, y] = 1

# Produce the image
data = plot.GenerateGnuplotData(sheet)
plot.CreateScript(template, scriptPath, data, imagePath)
plot.LaunchGnuplot(gnuplotPath, scriptPath, fontPath)

# Create the ImageWorksheet
plotImage = Image.FromFile(imagePath)
workbook.AddImageWorksheet('Surface Data Plot', plotImage)
]]></postFormulaeUserCode>
</document>
