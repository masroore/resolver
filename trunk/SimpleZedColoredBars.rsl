<!--
Copyright (c) 2008, Michael Foord

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions 
are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer 
      in the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Michael Foord nor the names of its 
      contributors may be used to endorse or promote products derived 
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER 
OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-->
<document currentResultWorksheet="Chart Data" verticalSplitterRatio="0.75" horizontalSplitterRatio="0.742725880551" splitterOrientation="Horizontal" suspendRecalculations="False" license="BSD Revised" copyrightOwner="Michael Foord">
    <foldState license="True" imports="True" worksheetCreation="False" preConstantsUserCode="False" constants="True" preFormulaeUserCode="False" generated="False" postFormulaeUserCode="False"/>
    <preConstantsUserCode><![CDATA[
sheet = workbook['Chart Data']

# A CellRange from which we will generate the bar chart
chartData = CellRange(sheet.Cells.B2, sheet.Cells.C20)
chartData.HeaderRow = chartData.Rows[1]

# Formatting the CellRange
chartData.HeaderRow.Bold = True
chartData.HeaderRow.BorderTop = True
chartData.HeaderRow.BorderBottom = True

chartData.Cols[1].BorderLeft = True
chartData.Cols[1].BorderRight = True
chartData.Cols[2].BorderRight = True

chartData.HeaderRow[1] = 'Bar'
chartData.HeaderRow[2] = 'Value'

# Fill the CellRange with random values
from random import random
for y in range(2, chartData.MaxRow+1):
    chartData['Bar', y] = y -1
    chartData['Value', y] = random() * 1000 


]]></preConstantsUserCode>
    <preFormulaeUserCode><![CDATA[
import clr
clr.AddReference('ZedGraph')
clr.AddReference('System.Drawing')

from ZedGraph import GraphPane, PointPairList, Fill, FillType
from System.Drawing import Bitmap, Color, Graphics, RectangleF
from System.Drawing.Imaging import ImageFormat
from System import Array

# Initialise the GraphPane
title = "Multi-Colored Bar Chart"
xAxisTitle = "Bar Number"
yAxisTitle = "Value"
pane = GraphPane(RectangleF(0, 0, 640, 480), title, xAxisTitle, yAxisTitle)

# The ZedGraph data collection class
ppl = PointPairList()
# Fill the PointPairList from the CellRange
colorStep = 4.0 / (chartData.MaxRow-1)
for i in range(2, chartData.MaxRow+1):
    x = int(chartData['Bar', i])
    y = chartData['Value', i]

    z = x * colorStep
    ppl.Add(x, y, z)

paleBlue = Color.FromArgb(220, 220, 255)
colorList = [Color.Red, Color.Yellow, Color.Green, Color.Blue, Color.Purple]
colors = Array[Color](colorList)

# Create the graph
curve = pane.AddBar("Multi-Colored Bars", ppl, Color.Blue)
curve.Bar.Fill = Fill(colors)
curve.Bar.Fill.Type = FillType.GradientByZ

curve.Bar.Fill.RangeMin = 0
curve.Bar.Fill.RangeMax = 4

# Create background gradients too
pane.Chart.Fill = Fill(Color.White, paleBlue, 45)
pane.Fill = Fill(Color.White, paleBlue, 45)

# A hack because the axis change needs a real
# image if we aren't using a control
bm = Bitmap(1, 1)
g = Graphics.FromImage(bm)
pane.AxisChange(g)

imageSheetName = 'Colored Bar Chart'
workbook.AddImageWorksheet(imageSheetName, pane.GetImage())

]]></preFormulaeUserCode>
    <names />
    <viewStates>
        <viewState worksheet="Chart Data">
            <currentCell col="1" row="1" />
            <scrollPos col="1" row="1" />
            <virtualGridSize width="24" height="35" />
        </viewState>
    </viewStates>
    <worksheet name="Chart Data" value="" showGrid="False" showBounds="False" headerWidth="-1" headerHeight="-1">
    </worksheet>
    <postFormulaeUserCode><![CDATA[
]]></postFormulaeUserCode>
</document>
